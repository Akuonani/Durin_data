---
title: Analysis
author: ak
format: 
  html:
    self-contained: true
    
    code-tools: true 
    source: true
    fig-width: 10
    fig-height: 6
---

```{r}
#Load libraries
library(tidyverse)
library(lme4)
library(ggfortify)
library(lmerTest)
library(performance)
library(readr)
#install.packages("broom.mixed")
library(broom.mixed)
library(grid)
library(ggeffects)
#install.packages("sjPlot")
library(sjPlot)
library(sjlabelled)
```

```{r}
droughtnet <- read_csv("droughtnet_data_cleaned_final.csv", 
                 col_types = cols(calluna_shoot_type = col_factor(levels = c("Long", "Short"))),
                 guess_max = Inf)

View(droughtnet)
# Now, to reorder the ageClass factor levels to start with Pioneer
droughtnet$ageClass <- factor(droughtnet$ageClass, levels = c("Pioneer", "Mature"))
levels(droughtnet$ageClass)

```

```         
```

```{r}
droughtnet2 <- droughtnet %>%
  mutate(plant_nr = case_when(
    # For Calluna vulgaris under Amb (0) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Calluna vulgaris" & 
    DroughtTrt == "Amb (0)" ~ paste0(siteID, "_", ageClass, "_CV_Amb(0)_", DroughNet_plotID, "_", plant_nr),

    # For Calluna vulgaris under Ext (90) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Calluna vulgaris" & 
    DroughtTrt == "Ext (90)" ~ paste0(siteID, "_", ageClass, "_CV_Ext(90)_", DroughNet_plotID, "_", plant_nr),

    # For Vaccinium myrtillus under Amb (0) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Vaccinium myrtillus" & 
    DroughtTrt == "Amb (0)" ~ paste0(siteID, "_", ageClass, "_VM_Amb(0)_", DroughNet_plotID, "_", plant_nr),

    # For Vaccinium myrtillus under Ext (90) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Vaccinium myrtillus" & 
    DroughtTrt == "Ext (90)" ~ paste0(siteID, "_", ageClass, "_VM_Ext(90)_", DroughNet_plotID, "_", plant_nr),

    # For Vaccinium vitis-idaea under Amb (0) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Vaccinium vitis-idaea" & 
    DroughtTrt == "Amb (0)" ~ paste0(siteID, "_", ageClass, "_VV_Amb(0)_", DroughNet_plotID, "_", plant_nr),

    # For Vaccinium vitis-idaea under Ext (90) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Vaccinium vitis-idaea" & 
    DroughtTrt == "Ext (90)" ~ paste0(siteID, "_", ageClass, "_VV_Ext(90)_", DroughNet_plotID, "_", plant_nr),

    # For Empetrum nigrum under Amb (0) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Empetrum nigrum" & 
    DroughtTrt == "Amb (0)" ~ paste0(siteID, "_", ageClass, "_EN_Amb(0)_", DroughNet_plotID, "_", plant_nr),

    # For Empetrum nigrum under Ext (90) treatment
    siteID %in% c("Lygra", "Tjøtta") & 
    ageClass %in% c("Pioneer", "Mature") & 
    species == "Empetrum nigrum" & 
    DroughtTrt == "Ext (90)" ~ paste0(siteID, "_", ageClass, "_EN_Ext(90)_", DroughNet_plotID, "_", plant_nr),

    TRUE ~ as.character(plant_nr)
  ))
view(droughtnet2)
```


```{r}
# Specify the columns to check for NA values
# List of columns to check for NA values
columns_to_check <- c("DroughtTrt", "DroughNet_plotID", "ageClass", "siteID", 
                      "species", "plant_height", "SLA", "mean_thickness", "dry_mass_g_original", "LDMC", "leaf_area", "wet_mass_g", "dry_mass_g")


# Check for rows with any NA values in the specified columns
na_rows <- apply(droughtnet2[columns_to_check], 1, function(row) any(is.na(row)))

# Create a data frame showing how many NA values there are in each row
na_row_summary <- droughtnet2[na_rows, columns_to_check]
na_row_summary$row_na_count <- rowSums(is.na(na_row_summary))

# Summarize the number of rows by the count of NAs they contain
na_row_summary <- na_row_summary %>%
  group_by(row_na_count) %>%
  summarise(n = n(), .groups = 'drop')

# Create a summary showing the co-occurrence of NA values across the specified columns
na_co_occurrence <- droughtnet2 %>%
  summarise(across(all_of(columns_to_check), ~ sum(is.na(.)))) %>%
  pivot_longer(cols = everything(), names_to = "variable", values_to = "na_count") %>%
  arrange(desc(na_count))

# Print the summaries
print(paste("Total rows with any NA values across checked columns:", sum(na_rows)))
print(na_row_summary)
print(na_co_occurrence)
```

```{r}
# Create the new data frame with selected columns
droughtnet_data2 <- select(droughtnet2, 
                           "envelope_ID", "siteID", "species", "ageClass", "DroughtTrt", 
                           "DroughNet_plotID", "leaf_age", "calluna_shoot_type", 
                           "plant_height", "mean_thickness", "SLA", "LDMC", "leaf_area", "plant_nr")

view(droughtnet_data2)

# Specify the columns to check for NA values
columns_to_check2 <- c("plant_height", "mean_thickness", "SLA", "LDMC", "leaf_area")

# Remove rows with any NA values in the specified columns
droughtnet_data2_clean <- droughtnet_data2[!rowSums(is.na(droughtnet_data2[columns_to_check2])), ]
view(droughtnet_data2_clean)
# Calculate the total number of NAs removed (for the specified columns only)
# This calculation considers rows removed rather than individual NAs
total_NAs_removed <- nrow(droughtnet_data2) - nrow(droughtnet_data2_clean)

# Calculate the total number of entries remaining
total_entries_remaining <- nrow(droughtnet_data2_clean)

# Print out the total NAs removed and total entries remaining
cat("Total NAs removed:", total_NAs_removed, "\n")
cat("Total entries remaining:", total_entries_remaining, "\n")
```

**Analysis for young leaves**

```{r}
# Specify the species of interest, including Calluna vulgaris
species_of_interest <- c("Empetrum nigrum", "Vaccinium myrtillus", "Vaccinium vitis-idaea", "Calluna vulgaris")

# Filter the data to include only the specified species where leaf_age is 'young',
# and for Calluna vulgaris, additionally check that calluna_shoot_type is 'short'

filtered_data <- droughtnet_data2_clean %>%
  filter(species %in% species_of_interest, leaf_age == "young") %>%
  filter(
    # Include Calluna vulgaris from Tjøtta regardless of calluna_shoot_type
    (species == "Calluna vulgaris" & siteID == "Tjøtta") |
    # Include Calluna vulgaris from Lygra only if calluna_shoot_type is Short
    (species == "Calluna vulgaris" & siteID == "Lygra" & calluna_shoot_type == "Short") |
    # Include other species of interest from both sites
    (species != "Calluna vulgaris")
  )
view(filtered_data)

```

**visualization of raw data**

**plant height**

```{r}
filtered_data  <- filtered_data  %>%
  filter(siteID %in% c("Tjøtta", "Lygra"),
         DroughtTrt %in% c("Amb (0)", "Ext (90)"),
         ageClass %in% c("Pioneer", "Mature"))

ggplot(filtered_data, aes(x = species, y = plant_height, fill = DroughtTrt)) +
  geom_boxplot() +
  facet_grid(ageClass ~ siteID, scales = "free") +  
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Plant Height vs Treatment by Species for Young Leaves",
       x = "Species",
       y = "Plant Height") +
  scale_fill_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "grey"))  
```

**SLA**

```{r}
ggplot(filtered_data, aes(x = species, y = log(SLA), fill = DroughtTrt)) +
  geom_boxplot() +
  facet_grid(ageClass ~ siteID, scales = "free") + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
        plot.caption = element_text(hjust = 0.5)) + 
  labs(title = "SLA vs Treatment by Species",
       x = "Species",
       y = "Log (SLA)",
       fill = "Drought Treatment",
       caption = "Figure 2: SLA Variation in Dwarf Shrubs Under Drought Conditions Across Different Ages and Sites") +
  scale_fill_manual(values = c("Amb (0)" = "orange", "Ext (90)" = "darkgrey")) 
```

**LDMC**

```{r}
ggplot(filtered_data, aes(x = species, y = LDMC, fill = DroughtTrt)) +
  geom_boxplot() +
  facet_grid(ageClass ~ siteID, scales = "free") + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
        plot.caption = element_text(hjust = 0.5)) + 
  labs(title = "LDMC vs Treatment by Species",
       x = "Species",
       y = "LDMC",
       fill = "Drought Treatment",
       caption = "Figure 3: LDMC Variation in dwarf Shrubs Under drought conditions across different successional phases and sites") +
  scale_fill_manual(values = c("Amb (0)" = "darkblue", "Ext (90)" = "lightblue")) 


#trying using jitter for the graphs
ggplot(filtered_data, aes(x = species, y = LDMC, color = DroughtTrt)) +
  geom_jitter(position = position_dodge(width = 0.5), size = 1.5, alpha = 0.7) + # Use position_dodge to separate points
  facet_grid(ageClass ~ siteID, scales = "free") + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
        plot.caption = element_text(hjust = 0.5)) + 
  labs(title = "LDMC vs Treatment by Species",
       x = "Species",
       y = "LDMC",
       color = "Drought Treatment", # Updated from fill to color
       caption = "Figure 3: LDMC Variation in Dwarf Shrubs Under Drought Conditions Across Different Successional Phases and Sites") +
  scale_color_manual(values = c("Amb (0)" = "darkblue", "Ext (90)" = "red")) 

```



Analysis for combined data set
Using for way interactions to check if site is an influential factor in functional trait response to drought for each trait
```{r}
#LDMC
LDMC_d_s_a_r <- lmer(LDMC ~ DroughtTrt * species * ageClass * siteID +
                                    (1 | DroughNet_plotID), 
                                  data = filtered_data)

summary(LDMC_d_s_a_r)
anova(LDMC_d_s_a_r)


performance::check_model(LDMC_d_s_a_r, detrend = FALSE)


```

```{r}
#THICKNESS
thickness_d_s_a_r <- lmer(mean_thickness ~ DroughtTrt * species * ageClass * siteID +
                                    (1 | DroughNet_plotID), 
                                  data = filtered_data)

summary(thickness_d_s_a_r)
anova(thickness_d_s_a_r)


performance::check_model(thickness_d_s_a_r, detrend = FALSE)

```

```{r}
#HEIGHT
height_d_s_a_r <- lmer(log(plant_height) ~ DroughtTrt * species * ageClass * siteID +
                                    (1 | DroughNet_plotID), 
                                  data = filtered_data)

summary(height_d_s_a_r)
anova(height_d_s_a_r)


performance::check_model(height_d_s_a_r, detrend = FALSE)
```

```{r}
#SLA
sla_d_s_a_r <- lmer(log(SLA) ~ DroughtTrt * species * ageClass * siteID +
                                    (1 | DroughNet_plotID), 
                                  data = filtered_data)

summary(sla_d_s_a_r)
anova(sla_d_s_a_r)

#validate model
performance::check_model(sla_d_s_a_r, detrend = FALSE)
```

```{r}
#leaf area
area_d_s_a_r <- lmer(log(leaf_area) ~ DroughtTrt * species * ageClass * siteID +
                                    (1 | DroughNet_plotID), 
                                  data = filtered_data)

summary(area_d_s_a_r)
anova(area_d_s_a_r)

#validate model
performance::check_model(area_d_s_a_r, detrend = FALSE)
```
While "site" as a main factor for does not significantly affect the functional trait response to drought in some (ldmc) traits, its interactions with other factors are significant. This indicates that the effect of site on the functional trait is strongly influenced by the site, and there are also significant three-way and four-way interactions involving "site." These findings suggest that the role of "site" is complex and becomes important when considered in combination with other factors like species, drought treatment, and age class.
The presence of significant interactions involving "site" underscores the importance of considering geographic location or environmental conditions in functional trait responses to drought.

We therefore proceed to partition the data by site


```{r}

# Function to format p-values
format_pvalue <- function(p) {
  if (p < 0.001) {
    "<0.001"
  } else {
    sprintf("%.3f", p)
  }
}

# Run ANOVA on each model, tidy the results, and format the p-values
anova_sla <- anova(sla_d_s_a_r) %>% tidy() %>% mutate(p.value = map_chr(p.value, format_pvalue)) %>% mutate(Trait = "SLA")
anova_height <- anova(height_d_s_a_r) %>% tidy() %>% mutate(p.value = map_chr(p.value, format_pvalue)) %>% mutate(Trait = "Plant height")
anova_thickness <- anova(thickness_d_s_a_r) %>% tidy() %>% mutate(p.value = map_chr(p.value, format_pvalue)) %>% mutate(Trait = "THICKNESS")
anova_LDMC <- anova(LDMC_d_s_a_r) %>% tidy() %>% mutate(p.value = map_chr(p.value, format_pvalue)) %>% mutate(Trait = "LDMC")
anova_area <- anova(area_d_s_a_r) %>% tidy() %>% mutate(p.value = map_chr(p.value, format_pvalue)) %>% mutate(Trait = "leaf_area")

# Combine the results into a single table
anova_combined <- bind_rows(anova_sla, anova_height, anova_thickness, anova_LDMC, anova_area)

# Use pivot_wider() to reshape the data from long to wide format
anova_wide <- anova_combined %>%
  select(term, Trait, p.value) %>%
  pivot_wider(names_from = Trait, values_from = p.value)

# Print the wide-format table
print(anova_wide)

write.csv(anova_wide, file = "anova_summary.csv", row.names = FALSE)

```


1 **Analysis for lygra site**

**filter data only for lygra**

```{r}
# Filter the data for siteID Lygra
lygra_data <- filtered_data %>%
  filter(siteID == "Lygra")
view(lygra_data)
lygra_data$species <- as.factor(lygra_data$species)
lygra_data$ageClass <- as.factor(lygra_data$ageClass)
lygra_data$DroughtTrt <- as.factor(lygra_data$DroughtTrt)


# Assuming your dataframe is named 'df' and your column of interest is 'leaf_area'
# Replace 'df' and 'leaf_area' with the actual names if they are different

# Directly print the minimum and maximum values
print(paste("Minimum leaf area:", min(lygra_data$leaf_area, na.rm = TRUE)))
print(paste("Maximum leaf area:", max(lygra_data$leaf_area, na.rm = TRUE)))


```

```{r}
ggplot(lygra_data, aes(x = species, y = leaf_area, fill = DroughtTrt)) +
  geom_boxplot() +
  facet_grid(~ ageClass, scales = "free") + 
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), 
        plot.caption = element_text(hjust = 0.5)) + 
  labs(title = "LDMC vs Treatment by Species",
       x = "Species",
       y = "leaf area",
       fill = "Drought Treatment",
       caption = "Figure 3: leaf area Variation in dwarf Shrubs Under drought conditions across different successional phases and sites") +
  scale_fill_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "lightblue")) 

```




**`Trait 1- LDMC- models`**

```{r}
LY_LDMC_s_d_a <- lmer(LDMC ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = lygra_data)

summary(LY_LDMC_s_d_a)


#validate model
performance::check_model(LY_LDMC_s_d_a, detrend = FALSE)
anova(LY_LDMC_s_d_a)
```

```{r}

if(!requireNamespace("emmeans", quietly = TRUE)) 
if(!requireNamespace("pbkrtest", quietly = TRUE)) 

# Calculate estimated marginal means for the interaction
emm_LDMC <- emmeans(LY_LDMC_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_LDMC <- summary(emm_LDMC) %>%
  as.data.frame() %>%
  # Abbreviate species names in EMMs dataframe
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

# Abbreviate species names in original dataset
lygra_data <- lygra_data %>%
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(lygra_data, aes(x = species, y = LDMC, fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_LDMC, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 2) +
  # Facet by ageClass 
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 14, face = "bold"),
        axis.title.x = element_text(size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        legend.text = element_text(size = 12), # Adjust the legend text size
        legend.title = element_text(size = 14, face = "bold"), # Bold and increase the legend title font size
        strip.text = element_text(size = 12, face = "bold") # Bold and increase the font size for age class labels
        ) +
  labs(title = "LDMC variability",
       x = "Species",
       y = "LDMC",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(name = "Drought Treatment", 
                    values = c("Amb (0)" = "blue", "Ext (90)" = "skyblue"),
                    labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought")) +
  scale_color_manual(name = "Drought Treatment",
                     values = c("Amb (0)" = "salmon", "Ext (90)" = "salmon"),
                     labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought"))


# Print the plot
print(p)


ggsave("LDMCly_plot.png", plot = p, width = 8, height = 5, dpi = 300)

```




**Trait 2- SLA**

```{r}

LY_sla_s_d_a <- lmer(log(SLA) ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = lygra_data)
summary(LY_sla_s_d_a)
#plot variance is zero
#validate model
performance::check_model(LY_sla_s_d_a, detrend = FALSE)
anova(LY_sla_s_d_a)

```

```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) 
if(!requireNamespace("pbkrtest", quietly = TRUE)) 

# Calculate estimated marginal means for the interaction
emm_inter <- emmeans(LY_sla_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_sla <- summary(emm_inter) %>%
  as.data.frame() %>%
  # Abbreviate species names in EMMs dataframe
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

# Abbreviate species names in original dataset
lygra_data <- lygra_data %>%
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(lygra_data, aes(x = species, y = log(SLA), fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_sla, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 2) +
  # Facet by ageClass 
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 14, face = "bold"),
        axis.title.x = element_text(size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        legend.text = element_text(size = 12), # Adjust the legend text size
        legend.title = element_text(size = 14, face = "bold"), # Bold and increase the legend title font size
        strip.text = element_text(size = 12, face = "bold") # Bold and increase the font size for age class labels
        ) +
  labs(title = "SLA variability",
       x = "Species",
       y = "log(SLA) in cm²/g",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(name = "Drought Treatment", 
                    values = c("Amb (0)" = "blue", "Ext (90)" = "skyblue"),
                    labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought")) +
  scale_color_manual(name = "Drought Treatment",
                     values = c("Amb (0)" = "salmon", "Ext (90)" = "salmon"),
                     labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought"))


# Print the plot
print(p)

ggsave("SLAly_plot.png", plot = p, width = 8, height = 5, dpi = 300)

```




**Trait 3: plant height**

```{r}
LY_h_s_d_a <- lmer(log(plant_height) ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = lygra_data)

summary(LY_h_s_d_a)


#validate model
performance::check_model(LY_h_s_d_a, detrend = FALSE)
anova(LY_h_s_d_a)

```


```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) 
if(!requireNamespace("pbkrtest", quietly = TRUE)) 

# Calculate estimated marginal means for the interaction
emm_height <- emmeans(LY_h_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_h <- summary(emm_height) %>%
  as.data.frame() %>%
  # Abbreviate species names in EMMs dataframe
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

# Abbreviate species names in original dataset
lygra_data <- lygra_data %>%
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(lygra_data, aes(x = species, y = log(plant_height), fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_h, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 2) +
  # Facet by ageClass 
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 14, face = "bold"),
        axis.title.x = element_text(size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        legend.text = element_text(size = 12), # Adjust the legend text size
        legend.title = element_text(size = 14, face = "bold"), # Bold and increase the legend title font size
        strip.text = element_text(size = 12, face = "bold") # Bold and increase the font size for age class labels
        ) +
  labs(title = "plant height variability",
       x = "Species",
       y = "Plant height (cm)",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(name = "Drought Treatment", 
                    values = c("Amb (0)" = "blue", "Ext (90)" = "skyblue"),
                    labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought")) +
  scale_color_manual(name = "Drought Treatment",
                     values = c("Amb (0)" = "salmon", "Ext (90)" = "salmon"),
                     labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought"))


# Print the plot
print(p)

ggsave("heightly_plot.png", plot = p, width = 8, height = 5, dpi = 300)
```


**Trait 4: mean -thickness

```{r}
LY_t_s_d_a <- lmer(mean_thickness ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = lygra_data)

summary(LY_t_s_d_a)
#the model is okak, but very small variability

#validate model
performance::check_model(LY_t_s__d_a, detrend = FALSE)
anova(LY_t_s__d_a)
```

overlayed three way interaction



```{r}
# Check and load required namespaces/packages
if(!requireNamespace("emmeans", quietly = TRUE)) {
  install.packages("emmeans")
}
library(emmeans)

if(!requireNamespace("pbkrtest", quietly = TRUE)) {
  install.packages("pbkrtest")
}
library(pbkrtest)

# I'm assuming you have a model object named LY_t_s_d_a from a previous lmer call
# Calculate estimated marginal means for the interaction
emm_thickness <- emmeans(LY_t_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_thickness <- summary(emm_thickness) %>%
  as.data.frame() %>%
  # Abbreviate species names in EMMs dataframe
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

# Abbreviate species names in original dataset
lygra_data <- lygra_data %>%
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

dodge_width <- 0.75

# Plotting with boxplots for the raw data
# Ensure 'mean_thickness' column exists in 'lygra_data'
p <- ggplot(lygra_data, aes(x = species, y = mean_thickness, fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_thickness, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 2) +
  # Facet by ageClass 
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 14, face = "bold"),
        axis.title.x = element_text(size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        legend.text = element_text(size = 12),
        legend.title = element_text(size = 14, face = "bold"),
        strip.text = element_text(size = 12, face = "bold")) +
  labs(title = "Leaf thickness variability",
       x = "Species",
       y = "Leaf thickness (mm)",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(name = "Drought Treatment", 
                    values = c("Amb (0)" = "blue", "Ext (90)" = "skyblue"),
                    labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought")) +
  scale_color_manual(name = "Drought Treatment",
                     values = c("Amb (0)" = "salmon", "Ext (90)" = "salmon"),
                     labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought"))

# Print the plot
print(p)


ggsave("thicknessly_plot.png", plot = p, width = 8, height = 5, dpi = 300)
```

trait 5. leaf area
```{r}
#use log plus 1 transformation because leaf area has values which are almost zero
lygra_data$leaf_area_transformed <- log(lygra_data$leaf_area + 1)

LY_area_s_d_a <- lmer(leaf_area_transformed ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = lygra_data)

summary(LY_area_s_d_a)

#validate model
performance::check_model(LY_area_s_d_a, detrend = FALSE)
anova(LY_area_s_d_a)
```


```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) {
  install.packages("emmeans")
}
library(emmeans)

if(!requireNamespace("pbkrtest", quietly = TRUE)) {
  install.packages("pbkrtest")
}
library(pbkrtest)
# Calculate estimated means for the interaction
emm_area <- emmeans(LY_area_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_area <- summary(emm_area) %>%
  as.data.frame() %>%
  # Abbreviate species names in EMMs dataframe
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

# Abbreviate species names in original dataset
lygra_data <- lygra_data %>%
  mutate(species = recode(species,
                          "Calluna vulgaris" = "CV",
                          "Vaccinium myrtillus" = "VM",
                          "Empetrum nigrum" = "EN",
                          "Vaccinium vitis-idaea" = "VV"))

dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(lygra_data, aes(x = species, y = leaf_area, fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_area, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 2) +
  # Facet by ageClass 
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1, size = 14, face = "bold"),
        axis.text.y = element_text(size = 14, face = "bold"),
        axis.title.x = element_text(size = 14, face = "bold"),
        axis.title.y = element_text(size = 14, face = "bold"),
        legend.text = element_text(size = 12), # Adjust the legend text size
        legend.title = element_text(size = 14, face = "bold"), # Bold and increase the legend title font size
        strip.text = element_text(size = 12, face = "bold") # Bold and increase the font size for age class labels
        ) +
  labs(title = "Leaf area variability",
       x = "Species",
       y = "Log-transformed leaf area (log(cm² + 1))",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(name = "Drought Treatment", 
                    values = c("Amb (0)" = "blue", "Ext (90)" = "skyblue"),
                    labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought")) +
  scale_color_manual(name = "Drought Treatment",
                     values = c("Amb (0)" = "salmon", "Ext (90)" = "salmon"),
                     labels = c("Amb (0)" = "Ambient", "Ext (90)" = "Extreme Drought"))


# Print the plot
print(p)

ggsave("arealy_plot.png", plot = p, width = 8, height = 5, dpi = 300)
```



tabulating the anova summary
```{r}
extract_interaction_p <- function(anova_model) {
  term <- rownames(anova_model)[nrow(anova_model)]
  p_value <- anova_model[nrow(anova_model), "Pr(>F)"]
  c(term = term, p_value = p_value)
}

interaction_ldmc <- extract_interaction_p(anova_ldmc)
interaction_sla <- extract_interaction_p(anova_sla)
interaction_h <- extract_interaction_p(anova_h)
interaction_t <- extract_interaction_p(anova_t)

# Combine into a data frame
interactions_df <- data.frame(
  Trait = c("LDMC", "SLA", "Height", "Thickness"),
  Interaction_Term = c(interaction_ldmc["term"], interaction_sla["term"], interaction_h["term"], interaction_t["term"]),
  P_Value = c(interaction_ldmc["p_value"], interaction_sla["p_value"], interaction_h["p_value"], interaction_t["p_value"])
)

# Load necessary libraries for table creation
library(knitr)
install.packages("kableExtra")

library(kableExtra)

# Create a formatted table
kable_table <- kable(interactions_df, caption = "ANOVA Summary for Interaction Terms", booktabs = TRUE) %>%
  kable_styling(bootstrap_options = c("striped", "hover"), full_width = FALSE)

# Print the table to the console
print(kable_table)

# Optionally, save the table to a CSV file
write.csv(interactions_df, "ANOVA_Summary_Interactions.csv", row.names = FALSE)

```


**site: Tjøtta**

```{r}
# Filter the data for siteID tjøtta
tjøtta_data <- filtered_data %>%
  filter(siteID == "Tjøtta")
view(tjøtta_data)
```

**trait 1- LDMC**

```{r}
tj_LDMC_s_d_a <- lmer(LDMC ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = tjøtta_data)

summary(tj_LDMC_s_d_a)


#validate model
performance::check_model(tj_LDMC_s_d_a, detrend = FALSE)
anova(tj_LDMC_s_d_a)
```

```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) install.packages("emmeans")
if(!requireNamespace("pbkrtest", quietly = TRUE)) install.packages("pbkrtest")


# Calculate estimated marginal means for the interaction
emm_ldmc_tj <- emmeans(tj_LDMC_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_tj <- summary(emm_ldmc_tj) %>%
  as.data.frame()

# Define the position dodge width
dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(tjøtta_data, aes(x = species, y = LDMC, fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  # Ensure that the position dodge here matches the dodge for the boxplot
  geom_point(data = emm_tj, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 3) +
  # Facet by ageClass to compare across age classes
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "LDMC by Treatment, Species, and Age Class",
       x = "Species",
       y = "LDMC",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(values = c("Amb (0)" = "lightblue", "Ext (90)" = "salmon")) +
  scale_color_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "red"))

# Display the plot
print(p)


```



**Trait2- plant height**

```{r}
tj_height_s_d_a <- lmer(log(plant_height) ~ DroughtTrt * species* ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = tjøtta_data)
summary(tj_height_s_d_a)


#validate model
performance::check_model(tj_height_s_d_a, detrend = FALSE)
anova(tj_height_s_d_a)
```


```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) install.packages("emmeans")
if(!requireNamespace("pbkrtest", quietly = TRUE)) install.packages("pbkrtest")


# Calculate estimated marginal means for the interaction
emm_height_tj <- emmeans(tj_height_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_tj <- summary(emm_height_tj) %>%
  as.data.frame()

# Define the position dodge width
dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(tjøtta_data, aes(x = species, y = log(plant_height), fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  # Ensure that the position dodge here matches the dodge for the boxplot
  geom_point(data = emm_tj, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 3) +
  # Facet by ageClass to compare across age classes
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "LDMC by Treatment, Species, and Age Class",
       x = "Species",
       y = "Plant Height",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(values = c("Amb (0)" = "lightblue", "Ext (90)" = "salmon")) +
  scale_color_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "red"))

# Display the plot
print(p)

```




**trait3 - SLA**

```{r}
tj_sla_s_d_a <- lmer(log(SLA) ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = tjøtta_data)
summary(tj_sla_s_d_a)


#validate model
performance::check_model(tj_sla_s_d_a, detrend = FALSE)
anova(tj_sla_s_d_a)
```

```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) install.packages("emmeans")
if(!requireNamespace("pbkrtest", quietly = TRUE)) install.packages("pbkrtest")


# Calculate estimated marginal means for the interaction
emm_sla_tj <- emmeans(tj_sla_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_tj <- summary(emm_sla_tj) %>%
  as.data.frame()

# Define the position dodge width
dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(tjøtta_data, aes(x = species, y = log(SLA), fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_tj, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 3) +
  # Facet by ageClass to compare across age classes
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "SLA by Treatment, Species, and Age Class",
       x = "Species",
       y = "SLA",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(values = c("Amb (0)" = "lightblue", "Ext (90)" = "salmon")) +
  scale_color_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "red"))

# Display the plot
print(p)

```




**trait 4: mean thickness*

```{r}
tj_t_s_d_a <- lmer(mean_thickness ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = tjøtta_data)
summary(tj_t_s_d_a)


#validate model
performance::check_model(tj_t_s_d_a, detrend = FALSE)
anova(tj_t_s_d_a)
```


```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) install.packages("emmeans")
if(!requireNamespace("pbkrtest", quietly = TRUE)) install.packages("pbkrtest")


# Calculate estimated marginal means for the interaction
emm_thickness_tj <- emmeans(tj_t_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_tj <- summary(emm_thickness_tj) %>%
  as.data.frame()

# Define the position dodge width
dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(tjøtta_data, aes(x = species, y = mean_thickness, fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  # Ensure that the position dodge here matches the dodge for the boxplot
  geom_point(data = emm_tj, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 3) +
  # Facet by ageClass to compare across age classes
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Thickness by Treatment, Species, and Age Class",
       x = "Species",
       y = "Thickness",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(values = c("Amb (0)" = "lightblue", "Ext (90)" = "salmon")) +
  scale_color_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "red"))

# Display the plot
print(p)

```




 trait 5. leaf area
```{r}
tj_area_s_d_a <- lmer(log(leaf_area) ~ DroughtTrt * species * ageClass +
                                    (1 | DroughNet_plotID), 
                                  data = tjøtta_data)
summary(tj_area_s_d_a)


#validate model
performance::check_model(tj_area_s_d_a, detrend = FALSE)
anova(tj_area_s_d_a)
```


```{r}
if(!requireNamespace("emmeans", quietly = TRUE)) install.packages("emmeans")
if(!requireNamespace("pbkrtest", quietly = TRUE)) install.packages("pbkrtest")


# Calculate estimated marginal means for the interaction
emm_height_tj <- emmeans(tj_area_s_d_a, ~ DroughtTrt * species * ageClass)

# Convert EMMs to a dataframe for plotting
emm_tj <- summary(emm_height_tj) %>%
  as.data.frame()

# Define the position dodge width
dodge_width <- 0.75

# Plotting with boxplots for the raw data
p <- ggplot(tjøtta_data, aes(x = species, y = log(leaf_area), fill = DroughtTrt)) +
  geom_boxplot(position = position_dodge(width = dodge_width)) +
  # Overlay the EMM predictions as points for clarity on the model's fit
  geom_point(data = emm_tj, aes(x = species, y = emmean, color = DroughtTrt, group = interaction(DroughtTrt, ageClass)),
             position = position_dodge(width = dodge_width), size = 3) +
  # Facet by ageClass to compare across age classes
  facet_wrap(~ ageClass, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
  labs(title = "Leaf Area by Treatment, Species, and Age Class",
       x = "Species",
       y = "Log(Leaf Area)",
       fill = "Drought Treatment", color = "Drought Treatment") +
  scale_fill_manual(values = c("Amb (0)" = "lightblue", "Ext (90)" = "salmon")) +
  scale_color_manual(values = c("Amb (0)" = "blue", "Ext (90)" = "red"))

# Display the plot
print(p)


```


stop here




**plot model onto the ggplot** keep

```{r}
ggplot(lygra_data, aes(x = species, y = LDMC, fill = DroughtTrt)) +
  geom_boxplot() +
  facet_grid(~ ageClass, scales = "free") +  # Facet only by ageClass
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # vertical adjustment for x axis labels
        plot.caption = element_text(hjust = 0.5)) + # Center the caption
  labs(title = "LDMC vs Treatment by Species",
       x = "Species",
       y = "LDMC",
       fill = "Drought Treatment",
       caption = "Figure 3: LDMC Variation in Dwarf Shrubs Under Drought Conditions Across Different Successional Phases") +
  scale_fill_manual(values = c("Amb (0)" = "darkblue", "Ext (90)" = "lightblue"))

#fit model

# Get fitted values directly from the model
fitted_values <- predict(LY_LDMC_species_droughtTrt, re.form = NA)  

lygra_data$fitted <- fitted_values

# Assuming fitted_values has been added to filtered_data as shown above
ggplot(lygra_data, aes(x = species, y = LDMC, fill = DroughtTrt)) +
  geom_boxplot() +
  geom_point(aes(y = fitted), position = position_dodge(width = 0.75), color = "red", size = 1.5) + # Add fitted values
  facet_grid(~ ageClass, scales = "free") + # Facet only by ageClass
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1), # Vertical adjustment for x axis labels
        plot.caption = element_text(hjust = 0.5)) + 
  labs(title = "LDMC vs Treatment by Species",
       x = "Species",
       y = "LDMC",
       fill = "Drought Treatment",
       caption = "Figure 3: LDMC Variation in Dwarf Shrubs Under Drought Conditions Across Different Successional Phases") +
  scale_fill_manual(values = c("Amb (0)" = "darkblue", "Ext (90)" = "lightblue"))




#fiiting in the geom jitter plot

# Get fitted values directly from the model
fitted_values <- predict(LY_LDMC_species_droughtTrt, re.form = NA)  

# Assuming 'fitted_values' is a vector of the same length as 'lygra_data'
lygra_data$fitted <- fitted_values

fitted_values$dodge_position <- as.numeric(lygra_data$DroughtTrt) - 1.5

ggplot(lygra_data, aes(x = species, y = LDMC, group = DroughtTrt)) +
  geom_jitter(aes(color = DroughtTrt), position = position_dodge(width = 0.5), size = 1.5, alpha = 0.7) +
  geom_point(aes(y = fitted, color = DroughtTrt),  # Ensure 'fitted' is now recognized
             position = position_dodge(width = 0.5), size = 3, shape = 16, color = "black") +
  facet_grid(ageClass ~ siteID, scales = "free") +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1)) +
  labs(title = "LDMC vs Treatment by Species", x = "Species", y = "LDMC", color = "Drought Treatment") +
  scale_color_manual(values = c("Amb (0)" = "darkgreen", "Ext (90)" = "deeppink"))

```









**young and old leaves (lygra)**

```{r}
# Subset the data for the specified species with young and old leaves, and for the Lygra site
subset_data1 <- subset(droughtnet_data2_clean, species %in% c("Vaccinium vitis-idaea", "Empetrum nigrum") & siteID == "Lygra")

# View the first few rows of the subsetted data
View(subset_data1)

```

**LDMC**

```{r}
ldmc_three_way_interactions <- lmer(LDMC ~ species * DroughtTrt * leaf_age +
                                (1 | DroughNet_plotID/plant_nr), 
                              data = subset_data1)

summary(ldmc_three_way_interactions)
performance::check_model(ldmc_three_way_interactions, detrend = FALSE)
```

**SLA**

```{r}
sla_three_way_interactions <- lmer(log(SLA) ~ species * DroughtTrt * leaf_age +
                                (1 | DroughNet_plotID/plant_nr), 
                              data = subset_data1)

summary(sla_three_way_interactions)
performance::check_model(sla_three_way_interactions, detrend = FALSE)
anova(sla_three_way_interactions)
```

**mean thickness**

```{r}
thickness_three_way_interactions <- lmer(mean_thickness ~ species * DroughtTrt * leaf_age +
                                (1 | DroughNet_plotID/plant_nr), 
                              data = subset_data1)

summary(thickness_three_way_interactions)
performance::check_model(thickness_three_way_interactions, detrend = FALSE)
```

**young and old leaves (tjøtta)**

```{r}
# Subset the data for the specified species with young and old leaves, and for the Lygra site
subset_data2 <- subset(droughtnet_data2_clean, species %in% c("Vaccinium vitis-idaea", "Empetrum nigrum") & siteID == "Tjøtta")

# View the first few rows of the subsetted data
View(subset_data2)
```

**LDMC**

```{r}
ldmc1_three_way_interactions <- lmer(LDMC ~ species * DroughtTrt * leaf_age +
                                (1 | DroughNet_plotID/plant_nr), 
                              data = subset_data2)

summary(ldmc1_three_way_interactions)
performance::check_model(ldmc1_three_way_interactions, detrend = FALSE)
```

**SLA**

```{r}
sla2_three_way_interactions <- lmer(log(SLA) ~ species * DroughtTrt * leaf_age +
                                (1 | DroughNet_plotID/plant_nr), 
                              data = subset_data2)

summary(sla2_three_way_interactions)
performance::check_model(sla2_three_way_interactions, detrend = FALSE)
```

**mean thickness**

```{r}
thickness3_three_way_interactions <- lmer(mean_thickness ~ species * DroughtTrt * leaf_age +
                                (1 | DroughNet_plotID/plant_nr), 
                              data = subset_data2)

summary(thickness3_three_way_interactions)
performance::check_model(thickness3_three_way_interactions, detrend = FALSE)
```

**CALLUNA SHOOT TYPE (lygra)**

```{r}
# Create a data frame for Calluna vulgaris at the Lygra site and remove rows with NA values
calluna_shoot <- droughtnet_data2_clean %>%
  filter(species == "Calluna vulgaris" & siteID == "Lygra") %>%
  drop_na()

view(calluna_shoot)
```

**LDMC**

```{r}
shoot_type_lmdc3 <- lmer(LDMC ~ (calluna_shoot_type * DroughtTrt * ageClass) +
                               (1 | DroughNet_plotID/plant_nr), 
                             data = calluna_shoot)
summary(shoot_type_lmdc3)

performance::check_model(shoot_type_lmdc3, detrend = FALSE)
```

**SLA**

```{r}
shoot_type_sla3 <- lmer(log(SLA) ~ (calluna_shoot_type * DroughtTrt * ageClass) +
                               (1 | DroughNet_plotID/plant_nr), 
                             data = calluna_shoot)
summary(shoot_type_sla3)

performance::check_model(shoot_type_sla3, detrend = FALSE)
```

**mean thickness**

```{r}
shoot_type_thickness3 <- lmer(mean_thickness ~ (calluna_shoot_type * DroughtTrt * ageClass) +
                               (1 | DroughNet_plotID/plant_nr), 
                             data = calluna_shoot)
summary(shoot_type_thickness3)

performance::check_model(shoot_type_thickness3, detrend = FALSE)
```
